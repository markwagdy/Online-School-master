@model OnlineSchool.Models.Lesson
@using OnlineSchool.Models


@if (Model.Id == 0)
{
    ViewBag.Title = "New";
}
else
{
    ViewBag.Title = "Edit";
}

@if (Model.Id == 0)
{
    <h2>New Lesson</h2>
}
else
{
    <h2>@Model.Name</h2>
}

@using (Html.BeginForm("Save", "Lesson"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-row">

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Level, new List<SelectListItem> {

                        new SelectListItem { Value = "Pre-Level 1" , Text = "Pre-Level 1" },
                        new SelectListItem { Value = "Pre-Level 2" , Text = "Pre-Level 2" },
                        new SelectListItem { Value = "Level 1" , Text = "Level 1" },
                        new SelectListItem { Value = "Level 2" , Text = "Level 2" },
                        new SelectListItem { Value = "Level 3" , Text = "Level 3" },
                        new SelectListItem { Value = "Level 4" , Text = "Level 4" },
                     }, "Select Level",
                    new { @class = "form-control" } )
                    @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Year, new List<SelectListItem> {

                        new SelectListItem { Value = "First Year" , Text = "First Year" },
                        new SelectListItem { Value = "Second Year" , Text = "Second Year" },
                     }, "Select Year",
                    new { @class = "form-control" } )
                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Term, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Term, new List<SelectListItem> {

                        new SelectListItem { Value = "First Term" , Text = "First Term" },
                        new SelectListItem { Value = "Second Term" , Text = "Second Term" },
                        new SelectListItem { Value = "Third Term" , Text = "Third Term" },
                     }, "Select Term",
                    new { @class = "form-control" } )
                    @Html.ValidationMessageFor(model => model.Term, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Type.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Type.Name, new List<SelectListItem> {

                      new SelectListItem { Value = "Coptic" , Text = "Coptic" },
                      new SelectListItem { Value = "Rite" , Text = "Rite" },
                      new SelectListItem { Value = "Tune" , Text = "Tune" },
                   }, "Select Type",
                  new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Type.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}


