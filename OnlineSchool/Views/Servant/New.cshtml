@model OnlineSchool.Models.Servant

@using OnlineSchool.Models


@if (Model.Id == 0)
{
    ViewBag.Title = "New";
}
else
{
    ViewBag.Title = "Edit";
}

@if (Model.Id == 0)
{
    <h2>New Servant</h2>
}
else
{
    <h2>@Model.Name</h2>
}
@using (Html.BeginForm("Save", "Servant"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Servant</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.Id == 0)
        {
            <div class="form-group flex-column">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">

                    @using (var db = new ApplicationDbContext())
                    {
                        @Html.DropDownListFor(model => model.Email, new SelectList(db.Users.Where(u => !db.Students.Any(u2 => u2.Email == u.Email) && !db.Servants.Any(u2 => u2.Email == u.Email)), "Email", "Email"), "Select Servant Email", new { @class = "form-control" })
                    }

                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                </div>
            </div>
        }
        else
        {
            <div class="form-group flex-column">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">

                    @using (var db = new ApplicationDbContext())
                    {
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @readonly = "readonly" })
                    }

                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                </div>
            </div>

        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
    @Html.HiddenFor(model => model.Id)


}

