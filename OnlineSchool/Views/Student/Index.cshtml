@model IEnumerable<OnlineSchool.Models.Student>

@{
    ViewBag.Title = "Students";
}

<h2 class="text-dark text-center">List of Students</h2>

<p class="float-right">
    @Html.ActionLink("Add new student", "New","Student" , new { @class = "btn btn-warning" })
</p>
@if (Model.Count() == 0)
{
    <p class="text-danger">We don't currently have any students yet</p>
}
<table class="table table-bordered table-hover" border="1">
    <thead class="thead-light text-center">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BirtDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AcademicYear)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MobileNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsDeacon)
            </th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
        </thead>

@foreach (var item in Model) {

    var deleteModal = "deleteModal" + item.Id;

    <tr class="text-truncate text-center">
        <td>
            @Html.DisplayFor(modelItem => item.Code)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BirtDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Gender)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AcademicYear)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MobileNumber)
        </td>
        <td>
            @(item.IsDeacon ? "Yes" : "No")
        </td>

        <td>
            @Html.ActionLink("Edit", "Edit","Student", new { id = item.Id }, new { @class = "btn btn-success" })
        </td>
        <td>
            @Html.ActionLink("Details", "Details","Student", new { id = item.Id }, new { @class = "btn btn-primary" })
        </td>
        <td>
            <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#@deleteModal">Delete</button>

        </td>
        
    </tr>

<div class="modal fade" id="@deleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Delete Student</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete @item.Name ?
            </div>
            <div class="modal-footer">
                @Html.ActionLink("Delete", "Delete", "Student", new { id = item.Id }, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
</div>

}

</table>

